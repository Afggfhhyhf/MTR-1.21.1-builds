import org.mtr.mod.BuildTools

plugins {
	id "java"
	id "fabric-loom" version "+"
}

group "org.mtr.mod"
version rootProject.properties.version
final BuildTools buildTools = new BuildTools("1.20.1", "fabric", project)

dependencies {
	minecraft "com.mojang:minecraft:${buildTools.minecraftVersion}"
	mappings "net.fabricmc:yarn:${buildTools.getYarnVersion()}:v2"
	modImplementation "net.fabricmc:fabric-loader:${buildTools.getFabricVersion()}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${buildTools.getFabricApiVersion()}"
	modApi "com.terraformersmc:modmenu:${buildTools.getModMenuVersion()}"
	implementation "com.google.code.gson:gson:+"
	implementation "com.google.code.findbugs:jsr305:+"
	implementation "it.unimi.dsi:fastutil:+"
	implementation "com.corundumstudio.socketio:netty-socketio:+"
	implementation "org.msgpack:msgpack-core:+"
	implementation "io.socket:socket.io-client:+"
	implementation "com.github.jonafanho:Socket-IO-Webserver:master-SNAPSHOT"
	implementation name: "Minecraft-Mappings-common-0.0.1"
	implementation name: "Minecraft-Mappings-fabric-${buildTools.minecraftVersion}-0.0.1"
	implementation name: "Transport-Simulation-Core-0.0.1"
	implementation name: "BlueMapAPI-2.6.0"
	implementation name: "Dynmap-3.2.1"
	compileOnly "xyz.jpenilla:squaremap-api:+"
}

repositories {
	flatDir { dirs "libs" }
	maven { url = "https://maven.terraformersmc.com/" }
	maven { url "https://jitpack.io" }
}

java {
	toolchain {
		languageVersion.set(JavaLanguageVersion.of(buildTools.javaLanguageVersion))
	}
	withSourcesJar()
	withJavadocJar()
}

build {
	doLast {
		buildTools.copyBuildFile()
	}
}
